/*

In this series of exercises you'll be exploring how Gradle handles various
logging outputs during the build process. We'll look at how to add logging
statements to your build as well as how to use the various command line
options to adjust the amount of logging output we receive.

*/

task hello(type: HelloTask)

class HelloTask extends DefaultTask {
    @TaskAction
    void doAction() {
		logger.info('Beginning')
		println 'Hello World'
		logger.info('End')
    }
}

task derpy << {
    println "Herp de derp"
}
